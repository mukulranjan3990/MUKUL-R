#include <iostream>
using namespace std;
// make a node
class node
{
public:
    int data;
    node *next;
    node(int value)
    {
        data = value;
        next = NULL;
    }
};
// insert at head.
void inseretAThead(node *&head, int value)
{
    node *n = new node(value);

    n->next = head;
    head = n;
}

// insert at middle.
void insertATmiddle(node *&head, int point,int value)
{
    node *n = new node(value);
    node* temp= head;
    while(temp->data!=point){
        temp=temp->next;

    }
    n->next=temp->next;
    temp->next=n;
}
// start the linked list insert at tail means end of the linked list

void insertATtail(node *&head, int value)
{
    node *n = new node(value);
    if (head == NULL)
    {
        head = n;
        return;
    }
    node *temp = head;
    while (temp->next != NULL)
    {
        temp = temp->next;
    }
    temp->next = n;
}

// delete the head.
void deletehead(node *&head)
{
    node *todelete = head;
    head =head->next;
    delete todelete;
}

// delete from middle.
void deleteATmiddle(node *&head, int value)
{
    if(head==NULL){
        return;
    }
    if(head->next==NULL){
        deletehead(head);
        return;
    }
    node *temp = head;
    while (temp->next->data != value)
    {
        temp = temp->next;
    }
   
    node *todelet = temp->next;
    temp->next = temp->next->next;
    delete todelet;
}

//delete the taill from given value.
void deleteATtail(node* &head,int value){
    node* temp =head;
    while(temp->next->data!=value){
        temp=temp->next;
    }
   
    node* todelete=temp->next;
    temp->next=NULL;
    delete todelete;

}

//delete the tail.
void deletetail(node* &head){
    node* temp =head;
    while(temp->next->next!=NULL){
        temp=temp->next;
    }
   
    node* todelete=temp->next;
    temp->next=NULL;
    delete todelete;

}
// search the given key.
bool search(node *head, int key)
{
    node *temp = head;
    while (temp != NULL)
    {
        if (temp->data == key)
        {
            cout << "yesh exist";
            return true;
        }
        temp = temp->next;
    }
    return false;
}

// display the linked list.
void display(node *head)
{
    node *temp = head;
    while (temp != NULL)
    {
        cout << temp->data << " ";
        temp = temp->next;
    }
    cout << endl;
}

// hear the mein function to call the linked list.

int main()
{
    node* head = NULL;
    insertATtail(head, 1);
    insertATtail(head, 2);
    insertATtail(head, 3);
    insertATtail(head, 4);
    insertATtail(head, 5);
    insertATtail(head, 6);
    insertATtail(head, 7);
    display(head);
    inseretAThead(head, 8);
    display(head);
    insertATmiddle(head,5,200);
    display(head);
    search(head, 9);
    deleteATmiddle(head, 5);
    display(head);
    deletehead(head);
    display(head);
    deletetail(head);
    display(head);
    deleteATtail(head,3);
    display(head);
}
